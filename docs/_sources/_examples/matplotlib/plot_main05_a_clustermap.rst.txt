
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\matplotlib\plot_main05_a_clustermap.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_matplotlib_plot_main05_a_clustermap.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_matplotlib_plot_main05_a_clustermap.py:


05.a ``sns.clustermap`` basic sample
============================================

This script shows how to use ``seaborn.clustermap`` to plot a
heatmap with a colored bar annotating the columns. While
``clustermap`` is designed for hierarchical clustering, this
example deactivates that feature to maintain the original data
order. Its main purpose is to demonstrate how to visually group
columns by passing a color mapping to the ``col_colors`` parameter.

.. note:: The hierarchical clustering has been deactivated.

.. GENERATED FROM PYTHON SOURCE LINES 15-88



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /_examples/matplotlib/images/sphx_glr_plot_main05_a_clustermap_001.png
         :alt: plot main05 a clustermap
         :srcset: /_examples/matplotlib/images/sphx_glr_plot_main05_a_clustermap_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /_examples/matplotlib/images/sphx_glr_plot_main05_a_clustermap_002.png
         :alt: plot main05 a clustermap
         :srcset: /_examples/matplotlib/images/sphx_glr_plot_main05_a_clustermap_002.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

         A0  A1  A2  A3  A4  A5  A6  A7  A8  A9  A10  A11  A12  A13  A14  A15  A16  A17  A18  A19
    A0    1   1   0   8   1   8   0   9   3   2    3    2    9    3    5    7    2    5    5    6
    A1    7   4   6   9   4   9   2   7   8   9    7    6    3    0    3    5    1    8    6    3
    A2    8   1   3   5   2   9   6   4   2   9    2    4    4    0    9    4    0    1    7    6
    A3    5   7   4   1   1   2   9   3   8   5    1    3    0    3    3    1    7    2    2    3
    A4    1   8   4   7   9   6   5   9   4   2    4    9    3    4    3    5    5    6    0    0
    A5    0   2   1   6   7   7   0   9   4   6    2    0    0    7    4    0    4    1    9    2
    A6    2   5   5   6   6   8   1   8   6   9    0    2    3    5    7    8    9    9    6    4
    A7    9   3   9   8   0   2   7   4   9   3    7    0    9    3    7    2    5    8    4    8
    A8    3   9   9   1   8   6   7   0   2   9    8    7    2    0    2    3    9    9    7    2
    A9    5   1   3   5   4   1   9   2   8   5    9    5    3    3    8    0    8    3    9    7
    A10   8   0   7   9   9   2   2   6   9   9    1    5    3    2    9    2    4    7    5    4
    A11   0   8   8   6   6   3   8   5   5   2    1    4    8    6    5    5    7    9    6    7
    A12   7   6   0   7   9   1   3   9   7   0    3    7    1    7    9    8    2    4    8    6
    A13   0   7   0   8   2   4   4   2   3   0    7    9    2    7    6    7    5    8    3    3
    A14   5   1   6   6   9   1   9   3   5   8    4    4    5    5    5    4    3    5    7    4
    A15   8   2   1   3   7   0   0   8   8   9    6    0    5    9    2    5    6    9    8    4
    A16   9   3   0   6   9   3   6   3   7   4    1    3    9    5    1    9    5    4    3    1
    A17   5   0   5   0   5   3   1   7   7   4    9    7    8    3    1    6    0    8    2    0
    A18   9   2   8   1   9   8   5   3   2   9    5    9    6    6    1    3    4    0    9    9
    A19   2   6   9   9   5   6   8   2   2   8    1    8    7    8    2    6    4    0    6    9
    ['b', 'g', 'b', 'r', 'g', 'g', 'b', 'r', 'r', 'b', 'b', 'b', 'g', 'r', 'g', 'g', 'g', 'g', 'r', 'r']
    A0     Group b
    A1     Group g
    A2     Group b
    A3     Group r
    A4     Group g
    A5     Group g
    A6     Group b
    A7     Group r
    A8     Group r
    A9     Group b
    A10    Group b
    A11    Group b
    A12    Group g
    A13    Group r
    A14    Group g
    A15    Group g
    A16    Group g
    A17    Group g
    A18    Group r
    A19    Group r
    dtype: object
    C:\Users\kelda\Desktop\repositories\github\python-spare-code\main\examples\matplotlib\plot_main05_a_clustermap.py:88: UserWarning:

    FigureCanvasAgg is non-interactive, and thus cannot be shown







|

.. code-block:: default
   :lineno-start: 16


    """
    # Display 0
    iris = sns.load_dataset("iris")
    species = iris.pop("species")
    lut = dict(zip(species.unique(), "rbg"))
    row_colors = species.map(lut)
    """

    # Libraries
    import numpy as np
    import pandas as pd
    import seaborn as sns
    import matplotlib.pyplot as plt

    # Constants
    N = 20
    C = sns.color_palette("Spectral", n_colors=5, as_cmap=False)

    # Create data
    data = np.random.randint(low=0, high=10, size=(N, N))
    colors = [np.random.choice(['r', 'g', 'b']) for i in range(N)]
    series = pd.Series({'A%s'%i:'Group %s'%c for i,c in enumerate(colors)})

    # Create DataFrame
    df = pd.DataFrame(data,
        index=['A%s'%i for i in range(N)],
        columns=['A%s'%i for i in range(N)]
    )

    # Show
    print(df)
    print(colors)
    print(series)

    # Display 1
    # ---------
    # Create colors dictionary
    col_colors = dict(zip(df.columns, colors))

    # Show
    g = sns.clustermap(df,
        figsize=(5,5),
        row_cluster=False, col_cluster=False,
        #row_colors=col_colors,
        col_colors=pd.Series(col_colors),
        linewidths=0,
        xticklabels=False, yticklabels=False,
        center=0, cmap="vlag"
    )

    # Display 2
    # ---------
    # Create colors dictionary

    col_colors = series.map({
        'Group g': 'g',
        'Group b': 'b',
        'Group r': 'r'
    })

    # Show
    g = sns.clustermap(df,
        figsize=(5,5),
        row_cluster=False, col_cluster=False,
        #row_colors=col_colors,
        col_colors=pd.Series(col_colors),
        linewidths=0,
        xticklabels=False, yticklabels=False,
        center=0, cmap="vlag"
    )

    # Show
    plt.show()

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.298 seconds)


.. _sphx_glr_download__examples_matplotlib_plot_main05_a_clustermap.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_main05_a_clustermap.py <plot_main05_a_clustermap.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_main05_a_clustermap.ipynb <plot_main05_a_clustermap.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
