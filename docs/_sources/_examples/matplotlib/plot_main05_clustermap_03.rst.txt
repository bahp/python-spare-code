
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\matplotlib\plot_main05_clustermap_03.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_matplotlib_plot_main05_clustermap_03.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_matplotlib_plot_main05_clustermap_03.py:


05. ``sns.clustermap`` basic sample
-------------------------------------

Plot a matrix dataset as a hierarchically-clustered heatmap.

.. note:: The hierarchical clustering has been deactivated.

.. GENERATED FROM PYTHON SOURCE LINES 10-83



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /_examples/matplotlib/images/sphx_glr_plot_main05_clustermap_03_001.png
         :alt: plot main05 clustermap 03
         :srcset: /_examples/matplotlib/images/sphx_glr_plot_main05_clustermap_03_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /_examples/matplotlib/images/sphx_glr_plot_main05_clustermap_03_002.png
         :alt: plot main05 clustermap 03
         :srcset: /_examples/matplotlib/images/sphx_glr_plot_main05_clustermap_03_002.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

         A0  A1  A2  A3  A4  A5  A6  A7  A8  A9  A10  A11  A12  A13  A14  A15  A16  A17  A18  A19
    A0    8   8   3   5   5   4   2   7   3   5    8    8    1    9    2    9    6    9    6    1
    A1    9   3   5   7   0   8   0   2   7   7    5    2    2    0    1    6    3    1    7    1
    A2    0   5   4   7   8   1   5   6   8   1    2    4    9    0    0    6    7    2    1    2
    A3    4   4   0   0   8   7   9   3   8   8    1    1    9    4    2    0    6    8    6    6
    A4    8   3   9   2   6   9   7   0   3   6    5    0    1    6    5    5    5    6    2    7
    A5    6   4   6   7   3   2   6   8   6   4    9    1    4    9    0    9    5    8    8    0
    A6    7   2   0   5   9   2   9   7   9   1    0    4    5    9    9    7    9    8    1    6
    A7    9   5   8   7   1   9   9   1   2   3    8    2    5    8    3    2    6    2    1    8
    A8    6   9   3   6   4   6   9   7   6   6    0    9    6    7    8    4    2    7    0    2
    A9    7   0   4   6   3   4   5   6   3   1    4    1    5    7    4    2    0    8    7    1
    A10   1   3   8   4   6   5   1   9   3   0    4    1    0    7    8    7    6    5    3    0
    A11   9   1   9   6   4   5   2   1   9   2    2    5    6    4    2    7    6    8    1    6
    A12   0   7   9   2   6   1   9   6   5   2    8    2    9    3    5    3    9    8    1    1
    A13   0   0   7   0   3   9   6   3   0   2    1    1    1    5    4    2    6    0    5    8
    A14   5   7   4   1   8   3   4   5   5   3    4    8    8    8    4    2    2    1    9    8
    A15   9   8   3   3   2   8   4   2   4   7    2    6    1    4    0    4    1    5    9    0
    A16   0   0   5   0   2   5   8   2   6   6    4    8    4    3    5    8    6    5    1    7
    A17   4   2   4   1   8   1   8   3   5   9    5    7    0    0    9    5    2    6    0    6
    A18   2   8   3   6   7   9   5   6   8   5    6    2    0    9    0    4    6    8    1    2
    A19   8   9   9   2   1   5   1   8   5   1    1    2    5    7    7    1    8    2    9    3
    ['b', 'b', 'r', 'g', 'b', 'g', 'b', 'b', 'b', 'g', 'r', 'r', 'r', 'g', 'r', 'b', 'r', 'g', 'g', 'r']
    A0     Group b
    A1     Group b
    A2     Group r
    A3     Group g
    A4     Group b
    A5     Group g
    A6     Group b
    A7     Group b
    A8     Group b
    A9     Group g
    A10    Group r
    A11    Group r
    A12    Group r
    A13    Group g
    A14    Group r
    A15    Group b
    A16    Group r
    A17    Group g
    A18    Group g
    A19    Group r
    dtype: object






|

.. code-block:: default
   :lineno-start: 11


    """
    # Display 0
    iris = sns.load_dataset("iris")
    species = iris.pop("species")
    lut = dict(zip(species.unique(), "rbg"))
    row_colors = species.map(lut)
    """

    # Libraries
    import numpy as np
    import pandas as pd
    import seaborn as sns
    import matplotlib.pyplot as plt

    # Constants
    N = 20
    C = sns.color_palette("Spectral", n_colors=5, as_cmap=False)

    # Create data
    data = np.random.randint(low=0, high=10, size=(N, N))
    colors = [np.random.choice(['r', 'g', 'b']) for i in range(N)]
    series = pd.Series({'A%s'%i:'Group %s'%c for i,c in enumerate(colors)})

    # Create DataFrame
    df = pd.DataFrame(data,
        index=['A%s'%i for i in range(N)],
        columns=['A%s'%i for i in range(N)]
    )

    # Show
    print(df)
    print(colors)
    print(series)

    # Display 1
    # ---------
    # Create colors dictionary
    col_colors = dict(zip(df.columns, colors))

    # Show
    g = sns.clustermap(df,
        figsize=(5,5),
        row_cluster=False, col_cluster=False,
        #row_colors=col_colors,
        col_colors=pd.Series(col_colors),
        linewidths=0,
        xticklabels=False, yticklabels=False,
        center=0, cmap="vlag"
    )

    # Display 2
    # ---------
    # Create colors dictionary

    col_colors = series.map({
        'Group g': 'g',
        'Group b': 'b',
        'Group r': 'r'
    })

    # Show
    g = sns.clustermap(df,
        figsize=(5,5),
        row_cluster=False, col_cluster=False,
        #row_colors=col_colors,
        col_colors=pd.Series(col_colors),
        linewidths=0,
        xticklabels=False, yticklabels=False,
        center=0, cmap="vlag"
    )

    # Show
    plt.show()

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.286 seconds)


.. _sphx_glr_download__examples_matplotlib_plot_main05_clustermap_03.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_main05_clustermap_03.py <plot_main05_clustermap_03.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_main05_clustermap_03.ipynb <plot_main05_clustermap_03.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
