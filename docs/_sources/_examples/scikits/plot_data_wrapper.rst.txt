
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\scikits\plot_data_wrapper.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_scikits_plot_data_wrapper.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_scikits_plot_data_wrapper.py:


03. Dummy Data Wrapper
======================

Dummy data wrapper

.. warning:: Non sense!

.. GENERATED FROM PYTHON SOURCE LINES 10-130




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Features:
                 0   1         2         3         4         5         6
    0          NaN NaN       NaN       NaN       NaN       NaN  0.015180
    1     0.580734 NaN       NaN  1.564946       NaN       NaN  0.779736
    2          NaN NaN  0.396652       NaN  0.776439       NaN       NaN
    3          NaN NaN       NaN -0.585224 -0.640082       NaN       NaN
    4          NaN NaN       NaN       NaN       NaN -0.506054       NaN
    ...        ...  ..       ...       ...       ...       ...       ...
    1995       NaN NaN       NaN       NaN       NaN       NaN -0.135976
    1996  1.094169 NaN -0.267562 -0.422022  0.369266 -0.326363       NaN
    1997  0.092511 NaN       NaN       NaN       NaN  0.516817       NaN
    1998       NaN NaN -1.935702       NaN       NaN       NaN       NaN
    1999       NaN NaN       NaN       NaN -0.419821 -1.231021       NaN

    [2000 rows x 7 columns]

    SimpleImputer()
                 0         1         2         3         4         5         6
    0     0.108353  0.041668 -0.073210  0.008829  0.031561  0.004044  0.015180
    1     0.580734  0.041668 -0.073210  1.564946  0.031561  0.004044  0.779736
    2     0.108353  0.041668  0.396652  0.008829  0.776439  0.004044  0.022744
    3     0.108353  0.041668 -0.073210 -0.585224 -0.640082  0.004044  0.022744
    4     0.108353  0.041668 -0.073210  0.008829  0.031561 -0.506054  0.022744
    ...        ...       ...       ...       ...       ...       ...       ...
    1995  0.108353  0.041668 -0.073210  0.008829  0.031561  0.004044 -0.135976
    1996  1.094169  0.041668 -0.267562 -0.422022  0.369266 -0.326363  0.022744
    1997  0.092511  0.041668 -0.073210  0.008829  0.031561  0.516817  0.022744
    1998  0.108353  0.041668 -1.935702  0.008829  0.031561  0.004044  0.022744
    1999  0.108353  0.041668 -0.073210  0.008829 -0.419821 -1.231021  0.022744

    [2000 rows x 7 columns]

    SimpleImputer(strategy='median')
                 0         1         2         3         4         5         6
    0     0.082040  0.001391 -0.048016  0.028946  0.034275  0.030538  0.015180
    1     0.580734  0.001391 -0.048016  1.564946  0.034275  0.030538  0.779736
    2     0.082040  0.001391  0.396652  0.028946  0.776439  0.030538  0.070572
    3     0.082040  0.001391 -0.048016 -0.585224 -0.640082  0.030538  0.070572
    4     0.082040  0.001391 -0.048016  0.028946  0.034275 -0.506054  0.070572
    ...        ...       ...       ...       ...       ...       ...       ...
    1995  0.082040  0.001391 -0.048016  0.028946  0.034275  0.030538 -0.135976
    1996  1.094169  0.001391 -0.267562 -0.422022  0.369266 -0.326363  0.070572
    1997  0.092511  0.001391 -0.048016  0.028946  0.034275  0.516817  0.070572
    1998  0.082040  0.001391 -1.935702  0.028946  0.034275  0.030538  0.070572
    1999  0.082040  0.001391 -0.048016  0.028946 -0.419821 -1.231021  0.070572

    [2000 rows x 7 columns]

    StandardScaler()
                 0   1         2         3         4         5         6
    0          NaN NaN       NaN       NaN       NaN       NaN -0.007728
    1     0.484713 NaN       NaN  1.541448       NaN       NaN  0.773445
    2          NaN NaN  0.467491       NaN  0.761388       NaN       NaN
    3          NaN NaN       NaN -0.588452 -0.686530       NaN       NaN
    4          NaN NaN       NaN       NaN       NaN -0.535019       NaN
    ...        ...  ..       ...       ...       ...       ...       ...
    1995       NaN NaN       NaN       NaN       NaN       NaN -0.162170
    1996  1.011552 NaN -0.193371 -0.426789  0.345191 -0.346549       NaN
    1997 -0.016255 NaN       NaN       NaN       NaN  0.537824       NaN
    1998       NaN NaN -1.853094       NaN       NaN       NaN       NaN
    1999       NaN NaN       NaN       NaN -0.461387 -1.295403       NaN

    [2000 rows x 7 columns]

    MinMaxScaler()
                 0   1         2         3         4         5         6
    0          NaN NaN       NaN       NaN       NaN       NaN  0.506827
    1     0.487361 NaN       NaN  0.774370       NaN       NaN  0.637657
    2          NaN NaN  0.654644       NaN  0.597190       NaN       NaN
    3          NaN NaN       NaN  0.418625  0.346324       NaN       NaN
    4          NaN NaN       NaN       NaN       NaN  0.355317       NaN
    ...        ...  ..       ...       ...       ...       ...       ...
    1995       NaN NaN       NaN       NaN       NaN       NaN  0.480962
    1996  0.564685 NaN  0.562043  0.445627  0.525080  0.380377       NaN
    1997  0.413834 NaN       NaN       NaN       NaN  0.497968       NaN
    1998       NaN NaN  0.329481       NaN       NaN       NaN       NaN
    1999       NaN NaN       NaN       NaN  0.385333  0.254212       NaN

    [2000 rows x 7 columns]

    RobustScaler()
                 0   1         2         3         4         5         6
    0          NaN NaN       NaN       NaN       NaN       NaN -0.041746
    1     0.399006 NaN       NaN  1.160497       NaN       NaN  0.534462
    2          NaN NaN  0.329547       NaN  0.566090       NaN       NaN
    3          NaN NaN       NaN -0.464025 -0.514371       NaN       NaN
    4          NaN NaN       NaN       NaN       NaN -0.430930       NaN
    ...        ...  ..       ...       ...       ...       ...       ...
    1995       NaN NaN       NaN       NaN       NaN       NaN -0.155665
    1996  0.809806 NaN -0.162707 -0.340721  0.255517 -0.286623       NaN
    1997  0.008378 NaN       NaN       NaN       NaN  0.390524       NaN
    1998       NaN NaN -1.398980       NaN       NaN       NaN       NaN
    1999       NaN NaN       NaN       NaN -0.346365 -1.013141       NaN

    [2000 rows x 7 columns]






|

.. code-block:: default
   :lineno-start: 11


    # Libraries
    import pandas as pd

    # Libraries specific
    from sklearn.preprocessing import StandardScaler
    from sklearn.preprocessing import MinMaxScaler
    from sklearn.preprocessing import RobustScaler
    from sklearn.preprocessing import Normalizer
    from sklearn.impute import SimpleImputer


    class DataframeXYWrapper():

        def __init__(self, dataframe, X_columns, y_columns):
            """
            """
            self.dataframe = dataframe
            self.X_cols = X_columns
            self.y_cols = y_columns

        def get_X(self):
            """Return..."""
            return self.dataframe[self.X_cols]

        def get_y(self):
            """Return..."""
            return self.dataframe[self.y_cols]

        def get_X_y(self):
            """Return...
            """
            return self.dataframe[self.X_cols + self.y_cols]

        def apply(self, obj, func, requires_X=False,
                                   requires_y=False,
                                   argname_X='X',
                                   argname_y='y',
                                   inplace=True,
                                   return_obj=True,
                                   **kwargs):
            """
            """
            if requires_X:
                kwargs[argname_X] = self.get_X()
            if requires_y:
                kwargs[argname_y] = self.get_y()

            # Output
            out = getattr(obj, func)(**kwargs)

            # Inplace
            if inplace:
                self.dataframe[self.X_cols] = out

            # Return
            if return_obj:
                return obj, out
            return out



    # --------------------------------------------------
    # Main
    # --------------------------------------------------
    # Libraries
    import numpy as np

    N = 2000 # number of observations
    F = 7    # number of features
    P = 70   # percent of cells with nan

    # Create dataset
    X = np.random.randn(N, F)
    y = (np.random.rand(N) > 0.1).astype(int)

    # Include NaN
    idxs = np.random.choice(X.size, int(N*F*P/100), replace=False)
    X.ravel()[idxs] = np.nan

    # Create dataframe
    dataframe = pd.DataFrame(X)
    dataframe['y'] = y

    # Create wrapper
    wrapper = DataframeXYWrapper(dataframe=dataframe,
                                 X_columns=list(range(F)),
                                 y_columns=['y'])
    # Show
    print("Features:")
    print(wrapper.get_X())

    # ------------------------------
    # Imputers
    # ------------------------------
    # Loop
    for name, imputer in [
                ('mean', SimpleImputer(strategy='mean')),
                ('median', SimpleImputer(strategy='median'))]:
        # Apply imputer
        obj, out = wrapper.apply(imputer, 'fit_transform',
                requires_X=True, inplace=False)
        # Display
        print("\n%s" % imputer)
        print(pd.DataFrame(out))


    # ------------------------------
    # Scalers
    # ------------------------------
    # Loop
    for name, scaler in [('std', StandardScaler()),
                         ('mmx', MinMaxScaler()),
                         ('rbs', RobustScaler())]:
        # Apply scaler
        obj, out = wrapper.apply(scaler, 'fit_transform',
                requires_X=True, inplace=False)
        # Display
        print("\n%s" % scaler)
        print(pd.DataFrame(out))


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.063 seconds)


.. _sphx_glr_download__examples_scikits_plot_data_wrapper.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_data_wrapper.py <plot_data_wrapper.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_data_wrapper.ipynb <plot_data_wrapper.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
