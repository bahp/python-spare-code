
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\scikits\plot_data_wrapper.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_scikits_plot_data_wrapper.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_scikits_plot_data_wrapper.py:


03. Dummy Data Wrapper
======================

Dummy data wrapper

.. warning:: Non sense!

.. GENERATED FROM PYTHON SOURCE LINES 10-130




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Features:
                 0         1         2   3         4         5         6
    0          NaN       NaN       NaN NaN       NaN       NaN       NaN
    1     1.347296       NaN  0.515670 NaN       NaN       NaN       NaN
    2          NaN       NaN  0.291399 NaN       NaN       NaN       NaN
    3    -0.642526 -1.235474       NaN NaN       NaN       NaN       NaN
    4          NaN       NaN       NaN NaN       NaN  0.557416       NaN
    ...        ...       ...       ...  ..       ...       ...       ...
    1995  1.635247       NaN       NaN NaN       NaN       NaN       NaN
    1996       NaN       NaN       NaN NaN       NaN -0.624596 -0.061913
    1997       NaN       NaN       NaN NaN       NaN  0.009890  0.616868
    1998       NaN       NaN       NaN NaN       NaN  1.190867  1.741777
    1999       NaN       NaN       NaN NaN  0.355378       NaN       NaN

    [2000 rows x 7 columns]

    SimpleImputer()
                 0         1         2        3         4         5         6
    0     0.041357 -0.068216 -0.031749  0.04785  0.102545 -0.036927 -0.026349
    1     1.347296 -0.068216  0.515670  0.04785  0.102545 -0.036927 -0.026349
    2     0.041357 -0.068216  0.291399  0.04785  0.102545 -0.036927 -0.026349
    3    -0.642526 -1.235474 -0.031749  0.04785  0.102545 -0.036927 -0.026349
    4     0.041357 -0.068216 -0.031749  0.04785  0.102545  0.557416 -0.026349
    ...        ...       ...       ...      ...       ...       ...       ...
    1995  1.635247 -0.068216 -0.031749  0.04785  0.102545 -0.036927 -0.026349
    1996  0.041357 -0.068216 -0.031749  0.04785  0.102545 -0.624596 -0.061913
    1997  0.041357 -0.068216 -0.031749  0.04785  0.102545  0.009890  0.616868
    1998  0.041357 -0.068216 -0.031749  0.04785  0.102545  1.190867  1.741777
    1999  0.041357 -0.068216 -0.031749  0.04785  0.355378 -0.036927 -0.026349

    [2000 rows x 7 columns]

    SimpleImputer(strategy='median')
                 0         1         2         3         4         5         6
    0     0.076763 -0.136706 -0.046341  0.083521  0.095111 -0.043407 -0.052291
    1     1.347296 -0.136706  0.515670  0.083521  0.095111 -0.043407 -0.052291
    2     0.076763 -0.136706  0.291399  0.083521  0.095111 -0.043407 -0.052291
    3    -0.642526 -1.235474 -0.046341  0.083521  0.095111 -0.043407 -0.052291
    4     0.076763 -0.136706 -0.046341  0.083521  0.095111  0.557416 -0.052291
    ...        ...       ...       ...       ...       ...       ...       ...
    1995  1.635247 -0.136706 -0.046341  0.083521  0.095111 -0.043407 -0.052291
    1996  0.076763 -0.136706 -0.046341  0.083521  0.095111 -0.624596 -0.061913
    1997  0.076763 -0.136706 -0.046341  0.083521  0.095111  0.009890  0.616868
    1998  0.076763 -0.136706 -0.046341  0.083521  0.095111  1.190867  1.741777
    1999  0.076763 -0.136706 -0.046341  0.083521  0.355378 -0.043407 -0.052291

    [2000 rows x 7 columns]

    StandardScaler()
                 0         1         2   3         4         5         6
    0          NaN       NaN       NaN NaN       NaN       NaN       NaN
    1     1.324088       NaN  0.519687 NaN       NaN       NaN       NaN
    2          NaN       NaN  0.306777 NaN       NaN       NaN       NaN
    3    -0.693387 -1.144427       NaN NaN       NaN       NaN       NaN
    4          NaN       NaN       NaN NaN       NaN  0.592394       NaN
    ...        ...       ...       ...  ..       ...       ...       ...
    1995  1.616041       NaN       NaN NaN       NaN       NaN       NaN
    1996       NaN       NaN       NaN NaN       NaN -0.585742 -0.034735
    1997       NaN       NaN       NaN NaN       NaN  0.046663  0.628226
    1998       NaN       NaN       NaN NaN       NaN  1.223768  1.726916
    1999       NaN       NaN       NaN NaN  0.263044       NaN       NaN

    [2000 rows x 7 columns]

    MinMaxScaler()
                 0        1         2   3         4         5         6
    0          NaN      NaN       NaN NaN       NaN       NaN       NaN
    1     0.754064      NaN  0.613530 NaN       NaN       NaN       NaN
    2          NaN      NaN  0.580622 NaN       NaN       NaN       NaN
    3     0.455813  0.27735       NaN NaN       NaN       NaN       NaN
    4          NaN      NaN       NaN NaN       NaN  0.677600       NaN
    ...        ...      ...       ...  ..       ...       ...       ...
    1995  0.797225      NaN       NaN NaN       NaN       NaN       NaN
    1996       NaN      NaN       NaN NaN       NaN  0.500614  0.484694
    1997       NaN      NaN       NaN NaN       NaN  0.595618  0.599129
    1998       NaN      NaN       NaN NaN       NaN  0.772449  0.788776
    1999       NaN      NaN       NaN NaN  0.510224       NaN       NaN

    [2000 rows x 7 columns]

    RobustScaler()
                 0        1         2   3        4         5         6
    0          NaN      NaN       NaN NaN      NaN       NaN       NaN
    1     0.939936      NaN  0.391849 NaN      NaN       NaN       NaN
    2          NaN      NaN  0.235481 NaN      NaN       NaN       NaN
    3    -0.532128 -0.78906       NaN NaN      NaN       NaN       NaN
    4          NaN      NaN       NaN NaN      NaN  0.446464       NaN
    ...        ...      ...       ...  ..      ...       ...       ...
    1995  1.152961      NaN       NaN NaN      NaN       NaN       NaN
    1996       NaN      NaN       NaN NaN      NaN -0.431874 -0.006734
    1997       NaN      NaN       NaN NaN      NaN  0.039604  0.468265
    1998       NaN      NaN       NaN NaN      NaN  0.917173  1.255456
    1999       NaN      NaN       NaN NaN  0.19609       NaN       NaN

    [2000 rows x 7 columns]






|

.. code-block:: default
   :lineno-start: 11


    # Libraries
    import pandas as pd

    # Libraries specific
    from sklearn.preprocessing import StandardScaler
    from sklearn.preprocessing import MinMaxScaler
    from sklearn.preprocessing import RobustScaler
    from sklearn.preprocessing import Normalizer
    from sklearn.impute import SimpleImputer


    class DataframeXYWrapper():

        def __init__(self, dataframe, X_columns, y_columns):
            """
            """
            self.dataframe = dataframe
            self.X_cols = X_columns
            self.y_cols = y_columns

        def get_X(self):
            """Return..."""
            return self.dataframe[self.X_cols]

        def get_y(self):
            """Return..."""
            return self.dataframe[self.y_cols]

        def get_X_y(self):
            """Return...
            """
            return self.dataframe[self.X_cols + self.y_cols]

        def apply(self, obj, func, requires_X=False,
                                   requires_y=False,
                                   argname_X='X',
                                   argname_y='y',
                                   inplace=True,
                                   return_obj=True,
                                   **kwargs):
            """
            """
            if requires_X:
                kwargs[argname_X] = self.get_X()
            if requires_y:
                kwargs[argname_y] = self.get_y()

            # Output
            out = getattr(obj, func)(**kwargs)

            # Inplace
            if inplace:
                self.dataframe[self.X_cols] = out

            # Return
            if return_obj:
                return obj, out
            return out



    # --------------------------------------------------
    # Main
    # --------------------------------------------------
    # Libraries
    import numpy as np

    N = 2000 # number of observations
    F = 7    # number of features
    P = 70   # percent of cells with nan

    # Create dataset
    X = np.random.randn(N, F)
    y = (np.random.rand(N) > 0.1).astype(int)

    # Include NaN
    idxs = np.random.choice(X.size, int(N*F*P/100), replace=False)
    X.ravel()[idxs] = np.nan

    # Create dataframe
    dataframe = pd.DataFrame(X)
    dataframe['y'] = y

    # Create wrapper
    wrapper = DataframeXYWrapper(dataframe=dataframe,
                                 X_columns=list(range(F)),
                                 y_columns=['y'])
    # Show
    print("Features:")
    print(wrapper.get_X())

    # ------------------------------
    # Imputers
    # ------------------------------
    # Loop
    for name, imputer in [
                ('mean', SimpleImputer(strategy='mean')),
                ('median', SimpleImputer(strategy='median'))]:
        # Apply imputer
        obj, out = wrapper.apply(imputer, 'fit_transform',
                requires_X=True, inplace=False)
        # Display
        print("\n%s" % imputer)
        print(pd.DataFrame(out))


    # ------------------------------
    # Scalers
    # ------------------------------
    # Loop
    for name, scaler in [('std', StandardScaler()),
                         ('mmx', MinMaxScaler()),
                         ('rbs', RobustScaler())]:
        # Apply scaler
        obj, out = wrapper.apply(scaler, 'fit_transform',
                requires_X=True, inplace=False)
        # Display
        print("\n%s" % scaler)
        print(pd.DataFrame(out))


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.076 seconds)


.. _sphx_glr_download__examples_scikits_plot_data_wrapper.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_data_wrapper.py <plot_data_wrapper.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_data_wrapper.ipynb <plot_data_wrapper.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
