
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples/plotly-examples/plot_main01_roc.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_plotly-examples_plot_main01_roc.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_plotly-examples_plot_main01_roc.py:


Plot ROC
============

This example shows how to plot the ROC curves
for various splits obtained for example when
using Cross Validation.

.. GENERATED FROM PYTHON SOURCE LINES 9-112





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>                        <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
            <script src="https://cdn.plot.ly/plotly-2.1.0.min.js"></script>                <div id="d438b0b2-692b-463f-9674-a480364ad53b" class="plotly-graph-div" style="height:350px; width:350px;"></div>            <script type="text/javascript">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("d438b0b2-692b-463f-9674-a480364ad53b")) {                    Plotly.newPlot(                        "d438b0b2-692b-463f-9674-a480364ad53b",                        [{"line":{"color":"#fde725","width":0.5},"mode":"lines+markers","name":"split1","type":"scatter","x":[-0.1,0.0,0.1,0.19999999999999998,0.30000000000000004,0.4,0.5,0.6,0.7000000000000001,0.8],"y":[0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9]},{"line":{"color":"#b5de2b","width":0.5},"mode":"lines+markers","name":"split2","type":"scatter","x":[-0.15,-0.04999999999999999,0.05000000000000002,0.15,0.25,0.35,0.44999999999999996,0.5499999999999999,0.65,0.75],"y":[0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9]},{"line":{"color":"#6ece58","width":0.5},"mode":"lines+markers","name":"split3","type":"scatter","x":[-0.2,-0.1,0.0,0.09999999999999998,0.2,0.3,0.39999999999999997,0.49999999999999994,0.6000000000000001,0.7],"y":[0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9]},{"line":{"color":"#35b779","width":0.5},"mode":"lines+markers","name":"split4","type":"scatter","x":[-0.25,-0.15,-0.04999999999999999,0.04999999999999999,0.15000000000000002,0.25,0.35,0.44999999999999996,0.55,0.65],"y":[0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9]},{"line":{"color":"#1f9e89","width":0.5},"mode":"lines+markers","name":"split5","type":"scatter","x":[-0.3,-0.19999999999999998,-0.09999999999999998,0.0,0.10000000000000003,0.2,0.3,0.39999999999999997,0.5,0.6000000000000001],"y":[0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9]},{"line":{"color":"#26828e","width":0.5},"mode":"lines+markers","name":"split6","type":"scatter","x":[0.15,0.25,0.35,0.44999999999999996,0.55,0.65,0.75,0.85,0.9500000000000001,1.05],"y":[0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9]},{"line":{"color":"#31688e","width":0.5},"mode":"lines+markers","name":"split7","type":"scatter","x":[0.15,0.25,0.35,0.44999999999999996,0.55,0.65,0.75,0.85,0.9500000000000001,1.05],"y":[0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9]},{"line":{"color":"#3e4989","width":0.5},"mode":"lines+markers","name":"split8","type":"scatter","x":[0.2,0.30000000000000004,0.4,0.5,0.6000000000000001,0.7,0.8,0.8999999999999999,1.0,1.1],"y":[0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9]},{"line":{"color":"#482878","width":0.5},"mode":"lines+markers","name":"split9","type":"scatter","x":[0.25,0.35,0.45,0.55,0.65,0.75,0.85,0.95,1.05,1.15],"y":[0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9]},{"line":{"color":"#440154","width":0.5},"mode":"lines+markers","name":"split10","type":"scatter","x":[0.3,0.4,0.5,0.6,0.7,0.8,0.8999999999999999,1.0,1.1,1.2],"y":[0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9]}],                        {"height":350,"legend":{"font":{"size":12},"orientation":"v","x":1.0,"xanchor":"right","y":0.0,"yanchor":"bottom"},"margin":{"b":0,"l":0,"pad":4,"r":0,"t":0},"paper_bgcolor":"rgba(0,0,0,0)","plot_bgcolor":"rgba(0,0,0,0)","shapes":[{"line":{"color":"gray","dash":"dash","width":1},"type":"line","x0":0,"x1":1,"y0":0,"y1":1}],"template":{"data":{"scatter":[{"type":"scatter"}]}},"width":350,"xaxis":{"constrain":"domain","gridcolor":"lightgray","gridwidth":1,"nticks":10,"range":[0,1],"showgrid":true,"title":{"text":"False Positive Rate"}},"yaxis":{"gridcolor":"lightgray","gridwidth":1,"nticks":10,"range":[0,1],"scaleanchor":"x","scaleratio":1,"showgrid":true,"title":{"text":"True Positive Rate"}}},                        {"responsive": true}                    )                };                            </script>        </div>
    </div>
    <br />
    <br />

.. code-block:: default
   :lineno-start: 10


    # Libraries
    import plotly.graph_objects as go
    from plotly.graph_objects import Layout
    import plotly.express as px
    import numpy as np


    # -----------------------------------------
    # Config
    # -----------------------------------------
    # Colors
    colors = px.colors.qualitative.Plotly
    colors = px.colors.sequential.Plasma_r
    colors = px.colors.sequential.Viridis_r
    #colors = px.colors.sequential.Blues # Issue only 9!

    # -----------------------------------------
    # Data
    # -----------------------------------------
    # Create some data
    fpr = np.arange(10)/10
    tpr = np.arange(10)/10

    # Data
    data = {
        'split1': np.vstack((fpr + -0.10, tpr)).T,
        'split2': np.vstack((fpr + -0.15, tpr)).T,
        'split3': np.vstack((fpr + -0.20, tpr)).T,
        'split4': np.vstack((fpr + -0.25, tpr)).T,
        'split5': np.vstack((fpr + -0.30, tpr)).T,
        'split6': np.vstack((fpr + 0.15, tpr)).T,
        'split7': np.vstack((fpr + 0.15, tpr)).T,
        'split8': np.vstack((fpr + 0.20, tpr)).T,
        'split9': np.vstack((fpr + 0.25, tpr)).T,
        'split10': np.vstack((fpr + 0.30, tpr)).T
    }


    # -------------------------------------
    # Visualize
    # -------------------------------------
    # Create figure
    fig = go.Figure()

    # Add diagonal line
    fig.add_shape(type='line', x0=0, x1=1, y0=0, y1=1,
        line=dict(dash='dash', color='gray', width=1),
    )

    # Plot each split
    for i, (name, array) in enumerate(data.items()):
        # Name of split
        name = f"{name}" # (AUC={10:.2f})"
        # Add trace
        fig.add_trace(go.Scatter(x=array[:, 0],
                                 y=array[:, 1],
                                 name=name,
                                 mode='lines+markers',
                                 line=dict(color=colors[i],
                                           width=0.5)))

    # Update layout
    fig.update_layout(
        xaxis_title='False Positive Rate',
        yaxis_title='True Positive Rate',
        yaxis=dict(scaleanchor="x", scaleratio=1),
        xaxis=dict(constrain='domain'),
        width=350, height=350,
        legend=dict(
            x=1.0, y=0.0,  # x=1, y=1.02
            orientation="v",
            font={'size': 12},
            yanchor="bottom",
            xanchor="right",
        ),
        margin={
            'l': 0,
            'r': 0,
            'b': 0,
            't': 0,
            'pad': 4
        },
        paper_bgcolor='rgba(0,0,0,0)',  # transparent
        plot_bgcolor='rgba(0,0,0,0)'  # transparent
    )

    # Update xaxes
    fig.update_xaxes(showgrid=True,
                     gridwidth=1,
                     nticks=10,
                     range=[0, 1],
                     gridcolor='lightgray')

    # Update yaxes
    fig.update_yaxes(showgrid=True,
                     gridwidth=1,
                     range=[0, 1],
                     nticks=10,
                     gridcolor='lightgray')

    # Show
    #fig.show()
    fig

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.192 seconds)


.. _sphx_glr_download__examples_plotly-examples_plot_main01_roc.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_main01_roc.py <plot_main01_roc.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_main01_roc.ipynb <plot_main01_roc.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
