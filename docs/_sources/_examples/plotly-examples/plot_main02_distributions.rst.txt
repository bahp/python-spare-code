
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\plotly-examples\plot_main02_distributions.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_plotly-examples_plot_main02_distributions.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_plotly-examples_plot_main02_distributions.py:


Plot Distributions
======================

This example shows how to plot the probability distributions
for each of the components of the confusion matrix. Note that
data is created artificially. If necessary, it is possible
to limit the axis to the range [0, 1] to keep only those true
probability values.

.. GENERATED FROM PYTHON SOURCE LINES 11-152





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>                        <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
            <script src="https://cdn.plot.ly/plotly-2.4.2.min.js"></script>                <div id="057b16b0-6cd0-4d82-a7f7-0057ced30b3c" class="plotly-graph-div" style="height:350px; width:700px;"></div>            <script type="text/javascript">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("057b16b0-6cd0-4d82-a7f7-0057ced30b3c")) {                    Plotly.newPlot(                        "057b16b0-6cd0-4d82-a7f7-0057ced30b3c",                        [{"box":{"visible":true},"fillcolor":"#6ece58","line":{"color":"black","width":1},"meanline":{"visible":true},"name":"tn","opacity":0.5,"type":"violin","x":[0.9710529842401512,-1.3042661765254548,-0.48596027492733596,0.13060031670782996,-0.35088916868802533,-0.9189094099162662,-0.027642528389851387,-0.5292931500366014,-0.3614364181857471,-0.29413181697660173,-2.8373720716928106,0.8667699207791393,-1.851977157204426,-0.1884682129212437,-0.45478179032581006,0.622087226885033,1.767440110236125,1.4283466017934634,-0.5692004012559349,0.7827672176287827,-0.19720853913865102],"xaxis":"x","yaxis":"y"},{"box":{"visible":true},"fillcolor":"#1f9e89","line":{"color":"black","width":1},"meanline":{"visible":true},"name":"fp","opacity":0.5,"type":"violin","x":[0.5860359883047087,0.6445814249351016,0.9505340739672966,0.27095936430707346,0.5720630636437699,0.8264743032726907,1.6026579368470248,1.5541198209914642,-0.5791407062539607,-0.21388556163067202,1.8858600709371556,-1.272143553849639,-0.059604630825954984,-1.3358777177581376,-0.6031051224058018,-0.7854060684994073,-1.8221568718477414,0.35236207130938113,1.2141060652135964,-0.7000322836044309,1.6079344383665861,0.13894211449607916],"xaxis":"x2","yaxis":"y2"},{"box":{"visible":true},"fillcolor":"#31688e","line":{"color":"black","width":1},"meanline":{"visible":true},"name":"fn","opacity":0.5,"type":"violin","x":[-0.5837389368034578,-0.08564129189659386,1.009873268062978,1.1749261871317072,1.1015275155483693,-1.673259835176511,-1.4799024161778898,1.501804395560281,-1.22662996778512,-1.3720472409035602,-0.21932918842545598,-0.5906350747618065,-0.002618290210362801,0.5583372755616857,0.0632527834391148,-0.6480720654602029,-1.5355142808138507,0.12311788544854259,0.9388513811334789,-1.93820047552154,-0.6813628773047319,0.807256363600141,0.29708021195408274,0.9752898957158336,-0.39484820081670813,0.38942288712068746,-0.3841660364322844,-0.42236844390951533],"xaxis":"x3","yaxis":"y3"},{"box":{"visible":true},"fillcolor":"#fde725","line":{"color":"black","width":1},"meanline":{"visible":true},"name":"tp","opacity":0.5,"type":"violin","x":[-0.8603619955084517,-1.1534935776292246,-1.2736629833263258,1.5991444472132603,0.40130823326086285,-1.1663238317079847,0.5958690628549058,-1.0840808674831235,1.185249250146511,-1.7640746358362527,-0.34873065854982827,-0.3335202968769739,0.9468181182643156,1.128485946641385,1.46519074053991,0.04038635824401576,0.5249976009246012,-0.03836579206085905,-1.1280213073052547,2.6745432086714187,0.7025935990117629,-3.5036714437731833,-0.5111525227646413,1.260286897473336,0.555177490717675,0.2994378219214445,0.5147329087722795,-2.4616871219093137,-2.079991269772204],"xaxis":"x4","yaxis":"y4"}],                        {"height":350,"margin":{"b":0,"l":0,"pad":0,"r":0,"t":0},"paper_bgcolor":"rgba(0,0,0,0)","plot_bgcolor":"rgba(0,0,0,0)","template":{"data":{"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"choropleth":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"choropleth"}],"contour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"contour"}],"contourcarpet":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"contourcarpet"}],"heatmap":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"heatmap"}],"heatmapgl":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"heatmapgl"}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"histogram2d":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"histogram2d"}],"histogram2dcontour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"histogram2dcontour"}],"mesh3d":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"mesh3d"}],"parcoords":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"parcoords"}],"pie":[{"automargin":true,"type":"pie"}],"scatter":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter"}],"scatter3d":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter3d"}],"scattercarpet":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattercarpet"}],"scattergeo":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergeo"}],"scattergl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergl"}],"scattermapbox":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattermapbox"}],"scatterpolar":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolar"}],"scatterpolargl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolargl"}],"scatterternary":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterternary"}],"surface":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"surface"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}]},"layout":{"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"autotypenumbers":"strict","coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]],"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]},"colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"geo":{"bgcolor":"white","lakecolor":"white","landcolor":"#E5ECF6","showlakes":true,"showland":true,"subunitcolor":"white"},"hoverlabel":{"align":"left"},"hovermode":"closest","mapbox":{"style":"light"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"ternary":{"aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"title":{"x":0.05},"xaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2},"yaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2}}},"width":700,"xaxis":{"anchor":"y","domain":[0.0,0.45]},"xaxis2":{"anchor":"y2","domain":[0.55,1.0]},"xaxis3":{"anchor":"y3","domain":[0.0,0.45]},"xaxis4":{"anchor":"y4","domain":[0.55,1.0]},"yaxis":{"anchor":"x","domain":[0.575,1.0],"visible":true},"yaxis2":{"anchor":"x2","domain":[0.575,1.0],"visible":true},"yaxis3":{"anchor":"x3","domain":[0.0,0.425],"visible":true},"yaxis4":{"anchor":"x4","domain":[0.0,0.425],"visible":true}},                        {"responsive": true}                    )                };                            </script>        </div>
    </div>
    <br />
    <br />

.. code-block:: default
   :lineno-start: 12


    # Libraries
    import plotly.graph_objects as go
    import plotly.express as px
    import pandas as pd
    import numpy as np

    # Specific
    from plotly.graph_objects import Layout

    try:
        __file__
        TERMINAL = True
    except:
        TERMINAL = False


    # -----------------------------------------
    # Helper method
    # -----------------------------------------
    # This method is implemented in pySML.
    def _tp_fp_tn_fn_distributions(y, y_pred, y_prob):
        """This function returns probabilities for each of the confusion
        matrix elements (tp, tn, fp, fn).

        Parameters
        ----------
        y : array-like
          The real categories

        y_pred : array-like
          The predicted categories

        y_prob: array-like
          The predict probabilities

        Returns
        -------
        tp_probs, tn_probs, fp_probs, fn_probs
        """
        # Tags.
        tp_idx = (y_pred == 1) & (y == 1)
        tn_idx = (y_pred == 0) & (y == 0)
        fp_idx = (y_pred == 1) & (y == 0)
        fn_idx = (y_pred == 0) & (y == 1)
        # Show information.
        tp_probs = y_prob[tp_idx]
        tn_probs = y_prob[tn_idx]
        fp_probs = y_prob[fp_idx]
        fn_probs = y_prob[fn_idx]
        # Return
        return tp_probs, tn_probs, fp_probs, fn_probs

    # -----------------------------------------
    # Config
    # -----------------------------------------
    # Colors
    colors = px.colors.qualitative.Plotly
    colors = px.colors.sequential.Plasma_r
    colors = px.colors.sequential.Viridis_r

    # -----------------------------------------
    # Data
    # -----------------------------------------
    # Create data
    data = pd.DataFrame()
    data['y_true'] = np.random.randint(2, size=100)
    data['y_pred'] = np.random.randint(2, size=100)
    data['y_prob'] = np.random.normal(loc=0, scale=1, size=100)

    # Get distributions
    tp_probs, tn_probs, fp_probs, fn_probs = \
        _tp_fp_tn_fn_distributions(data.y_true,
                                   data.y_pred,
                                   data.y_prob)

    # Visualize
    if TERMINAL:
        print("\nData:")
        print(data)


    # -------------------------------------
    # Visualize
    # -------------------------------------
    # Import subplots
    from plotly.subplots import make_subplots

    # Create figure
    fig = make_subplots(rows=2, cols=2)
    # subplot_titles=('TP', 'TN', 'FP', 'FN'))

    #  Add traces
    fig.add_trace(go.Violin(x=tn_probs, line_width=1,
        name='tn', line_color='black', fillcolor=colors[2],
        opacity=0.5, meanline_visible=True, box_visible=True), row=1, col=1)
    fig.add_trace(go.Violin(x=fp_probs, line_width=1,
        name='fp', line_color='black', fillcolor=colors[4],
        opacity=0.5, meanline_visible=True, box_visible=True), row=1, col=2)
    fig.add_trace(go.Violin(x=fn_probs, line_width=1,
        name='fn', line_color='black', fillcolor=colors[6],
        opacity=0.5, meanline_visible=True, box_visible=True), row=2, col=1)
    fig.add_trace(go.Violin(x=tp_probs, line_width=1,
        name='tp', line_color='black', fillcolor=colors[0],
        opacity=0.5, meanline_visible=True, box_visible=True), row=2, col=2)

    # Update layout
    fig.update_layout(
        width=700, height=350,
        #xaxis_title='False Positive Rate',
        #yaxis_title='True Positive Rate',
        #yaxis=dict(scaleanchor="x", scaleratio=1),
        #xaxis=dict(constrain='domain'),
        #legend=dict(
        #    x=1.0, y=0.0,  # x=1, y=1.02
        #    orientation="v",
        #    font={'size': 12},
        #    yanchor="bottom",
        #    xanchor="right",
        #),
        margin={
            'l': 0,
            'r': 0,
            'b': 0,
            't': 0,
            'pad': 0
        },
        paper_bgcolor='rgba(0,0,0,0)',  # transparent
        plot_bgcolor='rgba(0,0,0,0)'  # transparent
    )

    # Update axes
    #fig.update_xaxes(visible=True, range=[0.0, 0.5], row=1, col=1)
    #fig.update_xaxes(visible=True, range=[0.5, 1.0], row=1, col=2)
    #fig.update_xaxes(visible=True, range=[0.0, 0.5], row=2, col=1)
    #fig.update_xaxes(visible=True, range=[0.5, 1.0], row=2, col=2)
    fig.update_yaxes(visible=True)

    # Show
    if TERMINAL:
        fig.show()
    fig

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.108 seconds)


.. _sphx_glr_download__examples_plotly-examples_plot_main02_distributions.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_main02_distributions.py <plot_main02_distributions.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_main02_distributions.ipynb <plot_main02_distributions.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
