
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\pandas\plot_format01.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_pandas_plot_format01.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_pandas_plot_format01.py:


Pandas - Format 01
==================

.. GENERATED FROM PYTHON SOURCE LINES 5-63




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Data:
            feature_0  feature_1  feature_2  feature_3  feature_4  feature_5  feature_6  feature_7  feature_8  feature_9  patient  day
    0        0.293079   0.689923   0.694112   0.713763   0.987792   0.771861   0.220117   0.925795   0.811775   0.533385        0 -521
    1        0.541986   0.141707   0.801887   0.066201   0.163702   0.831886   0.030626   0.932065   0.250638   0.136324        0 -520
    2        0.560271   0.222420   0.157780   0.332324   0.351606   0.101164   0.267555   0.433957   0.093266   0.088217        0 -519
    3        0.602887   0.208107   0.896625   0.761853   0.849960   0.474410   0.475434   0.644391   0.544349   0.728357        0 -518
    4        0.919513   0.700232   0.077285   0.276650   0.488032   0.575039   0.734681   0.260787   0.379122   0.316387        0 -517
    ...           ...        ...        ...        ...        ...        ...        ...        ...        ...        ...      ...  ...
    149995   0.575249   0.571297   0.040742   0.283807   0.608028   0.638661   0.785569   0.688112   0.479900   0.596974      299   -5
    149996   0.406580   0.081539   0.962845   0.295363   0.674385   0.498505   0.456794   0.134979   0.606621   0.057287      299   -4
    149997   0.364489   0.905091   0.134344   0.485190   0.695288   0.127365   0.244941   0.274180   0.645931   0.287683      299   -3
    149998   0.932818   0.255812   0.431838   0.149098   0.686317   0.636972   0.297445   0.400601   0.213761   0.112432      299   -2
    149999   0.096547   0.669395   0.470483   0.594660   0.961959   0.027217   0.440885   0.059561   0.401991   0.149892      299   -1

    [150000 rows x 12 columns]

    Result:
                    feature_0  feature_1  feature_2  feature_3  feature_4  feature_5  feature_6  feature_7  feature_8  feature_9  patient  day  window
    patient                                                                                                                                           
    0       0        0.293079   0.689923   0.694112   0.713763   0.987792   0.771861   0.220117   0.925795   0.811775   0.533385        0 -521       0
            1        0.541986   0.141707   0.801887   0.066201   0.163702   0.831886   0.030626   0.932065   0.250638   0.136324        0 -520       0
            2        0.560271   0.222420   0.157780   0.332324   0.351606   0.101164   0.267555   0.433957   0.093266   0.088217        0 -519       0
            1        0.541986   0.141707   0.801887   0.066201   0.163702   0.831886   0.030626   0.932065   0.250638   0.136324        0 -520       1
            2        0.560271   0.222420   0.157780   0.332324   0.351606   0.101164   0.267555   0.433957   0.093266   0.088217        0 -519       1
    ...                   ...        ...        ...        ...        ...        ...        ...        ...        ...        ...      ...  ...     ...
    299     149997   0.364489   0.905091   0.134344   0.485190   0.695288   0.127365   0.244941   0.274180   0.645931   0.287683      299   -3     494
            149998   0.932818   0.255812   0.431838   0.149098   0.686317   0.636972   0.297445   0.400601   0.213761   0.112432      299   -2     494
            149997   0.364489   0.905091   0.134344   0.485190   0.695288   0.127365   0.244941   0.274180   0.645931   0.287683      299   -3     495
            149998   0.932818   0.255812   0.431838   0.149098   0.686317   0.636972   0.297445   0.400601   0.213761   0.112432      299   -2     495
            149999   0.096547   0.669395   0.470483   0.594660   0.961959   0.027217   0.440885   0.059561   0.401991   0.149892      299   -1     495

    [448200 rows x 13 columns]






|

.. code-block:: default
   :lineno-start: 6


    # Interesting code.
    # np.lib.stride_tricks.sliding_window_view(df.index, 3)

    # Libraries
    import numpy as np
    import pandas as pd

    # Configuration
    ROWS, COLS = 150000, 10
    PATIENTS = 300

    # Create random values
    features = np.random.random_sample((ROWS, COLS))
    patients = np.random.randint(PATIENTS, size=(ROWS,1))

    # Create DataFrame
    df = pd.DataFrame(data=features)
    df = df.add_prefix('feature_')
    df['patient'] = patients
    df['day'] = -(df.groupby('patient').cumcount()+1)
    df = df.sort_values(by=['patient', 'day'],
        ascending=[True, True]).reset_index(drop=True)

    # Show
    print("\nData:")
    print(df)

    # ----------------------------------
    # Method I: Own method
    # ----------------------------------
    def sliding_window_iter(series, size, include_id=True):
        """series is a column of a DataFrame.

        .. note: The DataFrame should be pre-ordered to ensure
                 that IDs remain consistent.
        """
        for i, start_row in enumerate(range(len(series) - size + 1)):
            s = series[start_row:start_row + size]
            if include_id:
                s['window'] = i
            yield s


    # Group by patient and compute sliding window
    result = df.groupby('patient').apply(lambda x:
        pd.concat(sliding_window_iter(x, 3)))

    # Show
    print("\nResult:")
    print(result)

    # ----------------------------------
    # Method II: Using rolling
    # ----------------------------------
    #a = df.groupby('patient').rolling(window=3)
    #b = [win for win in a if win.shape[0] == 3]
    #c = pd.concat(b)
    #print(c)

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  45.344 seconds)


.. _sphx_glr_download__examples_pandas_plot_format01.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_format01.py <plot_format01.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_format01.ipynb <plot_format01.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
