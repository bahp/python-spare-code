
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\pandas\plot_format01.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_pandas_plot_format01.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_pandas_plot_format01.py:


Pandas - Format 01
==================

.. GENERATED FROM PYTHON SOURCE LINES 5-63




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Data:
            feature_0  feature_1  feature_2  feature_3  feature_4  feature_5  feature_6  feature_7  feature_8  feature_9  patient  day
    0        0.979623   0.614196   0.987418   0.783977   0.124067   0.091703   0.786561   0.469344   0.875400   0.376862        0 -764
    1        0.703788   0.273728   0.340300   0.615004   0.684191   0.942062   0.348010   0.967824   0.385762   0.871937        0 -763
    2        0.371438   0.079782   0.823260   0.708306   0.369938   0.811628   0.633204   0.651392   0.280484   0.695567        0 -762
    3        0.328020   0.885688   0.392587   0.680641   0.392955   0.553611   0.042594   0.548246   0.390492   0.456034        0 -761
    4        0.501297   0.165586   0.460081   0.731801   0.000282   0.241274   0.907297   0.970229   0.811748   0.860023        0 -760
    ...           ...        ...        ...        ...        ...        ...        ...        ...        ...        ...      ...  ...
    149995   0.191597   0.511255   0.806912   0.230416   0.567208   0.694325   0.199896   0.888170   0.712706   0.852861      199   -5
    149996   0.921064   0.273353   0.092491   0.479319   0.371410   0.577101   0.704072   0.794275   0.153683   0.486088      199   -4
    149997   0.452191   0.763281   0.842967   0.137117   0.781363   0.947584   0.055635   0.668294   0.979773   0.216724      199   -3
    149998   0.470518   0.021949   0.700425   0.011306   0.947252   0.571024   0.627322   0.083457   0.025955   0.739100      199   -2
    149999   0.347461   0.806756   0.588549   0.306150   0.099819   0.964866   0.507220   0.188999   0.602958   0.684916      199   -1

    [150000 rows x 12 columns]

    Result:
                    feature_0  feature_1  feature_2  feature_3  feature_4  feature_5  feature_6  feature_7  feature_8  feature_9  patient  day  window
    patient                                                                                                                                           
    0       0        0.979623   0.614196   0.987418   0.783977   0.124067   0.091703   0.786561   0.469344   0.875400   0.376862        0 -764       0
            1        0.703788   0.273728   0.340300   0.615004   0.684191   0.942062   0.348010   0.967824   0.385762   0.871937        0 -763       0
            2        0.371438   0.079782   0.823260   0.708306   0.369938   0.811628   0.633204   0.651392   0.280484   0.695567        0 -762       0
            1        0.703788   0.273728   0.340300   0.615004   0.684191   0.942062   0.348010   0.967824   0.385762   0.871937        0 -763       1
            2        0.371438   0.079782   0.823260   0.708306   0.369938   0.811628   0.633204   0.651392   0.280484   0.695567        0 -762       1
    ...                   ...        ...        ...        ...        ...        ...        ...        ...        ...        ...      ...  ...     ...
    199     149997   0.452191   0.763281   0.842967   0.137117   0.781363   0.947584   0.055635   0.668294   0.979773   0.216724      199   -3     759
            149998   0.470518   0.021949   0.700425   0.011306   0.947252   0.571024   0.627322   0.083457   0.025955   0.739100      199   -2     759
            149997   0.452191   0.763281   0.842967   0.137117   0.781363   0.947584   0.055635   0.668294   0.979773   0.216724      199   -3     760
            149998   0.470518   0.021949   0.700425   0.011306   0.947252   0.571024   0.627322   0.083457   0.025955   0.739100      199   -2     760
            149999   0.347461   0.806756   0.588549   0.306150   0.099819   0.964866   0.507220   0.188999   0.602958   0.684916      199   -1     760

    [448800 rows x 13 columns]






|

.. code-block:: default
   :lineno-start: 6


    # Interesting code.
    # np.lib.stride_tricks.sliding_window_view(df.index, 3)

    # Libraries
    import numpy as np
    import pandas as pd

    # Configuration
    ROWS, COLS = 150000, 10
    PATIENTS = 200

    # Create random values
    features = np.random.random_sample((ROWS, COLS))
    patients = np.random.randint(PATIENTS, size=(ROWS,1))

    # Create DataFrame
    df = pd.DataFrame(data=features)
    df = df.add_prefix('feature_')
    df['patient'] = patients
    df['day'] = -(df.groupby('patient').cumcount()+1)
    df = df.sort_values(by=['patient', 'day'],
        ascending=[True, True]).reset_index(drop=True)

    # Show
    print("\nData:")
    print(df)

    # ----------------------------------
    # Method I: Own method
    # ----------------------------------
    def sliding_window_iter(series, size, include_id=True):
        """series is a column of a DataFrame.

        .. note: The DataFrame should be pre-ordered to ensure
                 that IDs remain consistent.
        """
        for i, start_row in enumerate(range(len(series) - size + 1)):
            s = series[start_row:start_row + size]
            if include_id:
                s['window'] = i
            yield s


    # Group by patient and compute sliding window
    result = df.groupby('patient').apply(lambda x:
        pd.concat(sliding_window_iter(x, 3)))

    # Show
    print("\nResult:")
    print(result)

    # ----------------------------------
    # Method II: Using rolling
    # ----------------------------------
    #a = df.groupby('patient').rolling(window=3)
    #b = [win for win in a if win.shape[0] == 3]
    #c = pd.concat(b)
    #print(c)

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  44.852 seconds)


.. _sphx_glr_download__examples_pandas_plot_format01.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_format01.py <plot_format01.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_format01.ipynb <plot_format01.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
