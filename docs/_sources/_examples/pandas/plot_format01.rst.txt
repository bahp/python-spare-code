
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\pandas\plot_format01.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_pandas_plot_format01.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_pandas_plot_format01.py:


Pandas - Format 01
==================

.. GENERATED FROM PYTHON SOURCE LINES 5-63




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Data:
          feature_0  feature_1  feature_2  feature_3  feature_4  feature_5  feature_6  feature_7  feature_8  feature_9  patient  day
    0      0.418318   0.995120   0.421267   0.049568   0.255670   0.960824   0.762389   0.684913   0.015047   0.845302        0  -10
    1      0.403186   0.805439   0.232802   0.647419   0.235624   0.132495   0.752016   0.465199   0.014034   0.760352        0   -9
    2      0.249436   0.955134   0.046832   0.448144   0.339281   0.990495   0.324811   0.007479   0.974475   0.570720        0   -8
    3      0.064488   0.433377   0.384440   0.633329   0.645493   0.003378   0.821426   0.484200   0.086182   0.132055        0   -7
    4      0.496517   0.980439   0.232791   0.628408   0.621503   0.381243   0.713633   0.676580   0.794599   0.501966        0   -6
    ...         ...        ...        ...        ...        ...        ...        ...        ...        ...        ...      ...  ...
    1495   0.938221   0.745349   0.773805   0.427077   0.609454   0.935503   0.650757   0.098354   0.169881   0.226130       99   -5
    1496   0.061225   0.130190   0.264949   0.022108   0.222819   0.640197   0.299762   0.705946   0.431318   0.184315       99   -4
    1497   0.527956   0.302880   0.990451   0.705653   0.213480   0.587943   0.074290   0.363994   0.498658   0.483028       99   -3
    1498   0.440545   0.660688   0.202901   0.154774   0.824736   0.068752   0.672952   0.446220   0.404142   0.906336       99   -2
    1499   0.432793   0.327721   0.242662   0.272771   0.538899   0.392280   0.553550   0.604402   0.594803   0.291160       99   -1

    [1500 rows x 12 columns]

    Result:
                  feature_0  feature_1  feature_2  feature_3  feature_4  feature_5  feature_6  feature_7  feature_8  feature_9  patient  day  window
    patient                                                                                                                                         
    0       0      0.418318   0.995120   0.421267   0.049568   0.255670   0.960824   0.762389   0.684913   0.015047   0.845302        0  -10       0
            1      0.403186   0.805439   0.232802   0.647419   0.235624   0.132495   0.752016   0.465199   0.014034   0.760352        0   -9       0
            2      0.249436   0.955134   0.046832   0.448144   0.339281   0.990495   0.324811   0.007479   0.974475   0.570720        0   -8       0
            1      0.403186   0.805439   0.232802   0.647419   0.235624   0.132495   0.752016   0.465199   0.014034   0.760352        0   -9       1
            2      0.249436   0.955134   0.046832   0.448144   0.339281   0.990495   0.324811   0.007479   0.974475   0.570720        0   -8       1
    ...                 ...        ...        ...        ...        ...        ...        ...        ...        ...        ...      ...  ...     ...
    99      1497   0.527956   0.302880   0.990451   0.705653   0.213480   0.587943   0.074290   0.363994   0.498658   0.483028       99   -3      19
            1498   0.440545   0.660688   0.202901   0.154774   0.824736   0.068752   0.672952   0.446220   0.404142   0.906336       99   -2      19
            1497   0.527956   0.302880   0.990451   0.705653   0.213480   0.587943   0.074290   0.363994   0.498658   0.483028       99   -3      20
            1498   0.440545   0.660688   0.202901   0.154774   0.824736   0.068752   0.672952   0.446220   0.404142   0.906336       99   -2      20
            1499   0.432793   0.327721   0.242662   0.272771   0.538899   0.392280   0.553550   0.604402   0.594803   0.291160       99   -1      20

    [3900 rows x 13 columns]






|

.. code-block:: default
   :lineno-start: 6


    # Interesting code.
    # np.lib.stride_tricks.sliding_window_view(df.index, 3)

    # Libraries
    import numpy as np
    import pandas as pd

    # Configuration
    ROWS, COLS = 1500, 10
    PATIENTS = 100

    # Create random values
    features = np.random.random_sample((ROWS, COLS))
    patients = np.random.randint(PATIENTS, size=(ROWS,1))

    # Create DataFrame
    df = pd.DataFrame(data=features)
    df = df.add_prefix('feature_')
    df['patient'] = patients
    df['day'] = -(df.groupby('patient').cumcount()+1)
    df = df.sort_values(by=['patient', 'day'],
        ascending=[True, True]).reset_index(drop=True)

    # Show
    print("\nData:")
    print(df)

    # ----------------------------------
    # Method I: Own method
    # ----------------------------------
    def sliding_window_iter(series, size, include_id=True):
        """series is a column of a DataFrame.

        .. note: The DataFrame should be pre-ordered to ensure
                 that IDs remain consistent.
        """
        for i, start_row in enumerate(range(len(series) - size + 1)):
            s = series[start_row:start_row + size]
            if include_id:
                s['window'] = i
            yield s


    # Group by patient and compute sliding window
    result = df.groupby('patient').apply(lambda x:
        pd.concat(sliding_window_iter(x, 3)))

    # Show
    print("\nResult:")
    print(result)

    # ----------------------------------
    # Method II: Using rolling
    # ----------------------------------
    #a = df.groupby('patient').rolling(window=3)
    #b = [win for win in a if win.shape[0] == 3]
    #c = pd.concat(b)
    #print(c)

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.629 seconds)


.. _sphx_glr_download__examples_pandas_plot_format01.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_format01.py <plot_format01.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_format01.ipynb <plot_format01.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
