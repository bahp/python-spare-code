
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\pandas\plot_format06_stacked_oucru_v2.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_pandas_plot_format06_stacked_oucru_v2.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_pandas_plot_format06_stacked_oucru_v2.py:


02. Clean OUCRU v2.0
=====================

.. GENERATED FROM PYTHON SOURCE LINES 5-223




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

             Unnamed: 0  Unnamed: 0.1        study_no                date                   column        result unit result_old  date_old dsource
    0                 0             0  01nva-003-1001 2020-06-11 00:00:00             hypertension          True  NaN        NaN       NaN   01nva
    1                 1             1  01nva-003-1002 2020-06-17 00:00:00             hypertension         False  NaN        NaN       NaN   01nva
    2                 2             2  01nva-003-1003 2020-06-18 00:00:00             hypertension         False  NaN        NaN       NaN   01nva
    3                 3             3  01nva-003-1004 2020-06-22 00:00:00             hypertension         False  NaN        NaN       NaN   01nva
    4                 4             4  01nva-003-1005 2020-07-02 00:00:00             hypertension         False  NaN        NaN       NaN   01nva
    ...             ...           ...             ...                 ...                      ...           ...  ...        ...       ...     ...
    1893743      321392        321392          md-997 2003-08-30 08:00:00  serology_interpretation     Secondary  NaN        NaN       NaN      md
    1893744      321393        321393          md-998 2003-07-28 09:30:00  serology_interpretation     Secondary  NaN        NaN       NaN      md
    1893745      321394        321394          md-998 2003-08-02 09:30:00  serology_interpretation     Secondary  NaN        NaN       NaN      md
    1893746      321395        321395          md-999 2003-07-27 09:30:00  serology_interpretation  Inconclusive  NaN        NaN       NaN      md
    1893747      321396        321396          md-999 2003-08-01 09:30:00  serology_interpretation  Inconclusive  NaN        NaN       NaN      md

    [1893748 rows x 10 columns]
    Index(['Unnamed: 0', 'Unnamed: 0.1', 'study_no', 'date', 'column', 'result',
           'unit', 'result_old', 'date_old', 'dsource'],
          dtype='object')
    index                          int64
    patient_nhs_number            object
    date_collected        datetime64[ns]
    laboratory_code               object
    result                       float64
    unit                          object
    dtype: object

    Patient table:
              id date_created date_updated name surname      ext_number      nhs_number      hos_number        dob  gender
    0          1   2023-05-30   2023-05-30               01nva-003-1001  01nva-003-1001  01nva-003-1001 2023-05-30       0
    1          2   2023-05-30   2023-05-30               01nva-003-1002  01nva-003-1002  01nva-003-1002 2023-05-30       0
    2          3   2023-05-30   2023-05-30               01nva-003-1003  01nva-003-1003  01nva-003-1003 2023-05-30       0
    3          4   2023-05-30   2023-05-30               01nva-003-1004  01nva-003-1004  01nva-003-1004 2023-05-30       0
    4          5   2023-05-30   2023-05-30               01nva-003-1005  01nva-003-1005  01nva-003-1005 2023-05-30       0
    ...      ...          ...          ...  ...     ...             ...             ...             ...        ...     ...
    16484  16485   2023-05-30   2023-05-30                       md-998          md-998          md-998 2023-05-30       0
    16485  16486   2023-05-30   2023-05-30                       md-999          md-999          md-999 2023-05-30       0
    16486  16487   2023-05-30   2023-05-30                        md-21           md-21           md-21 2023-05-30       0
    16487  16488   2023-05-30   2023-05-30                         md-1            md-1            md-1 2023-05-30       0
    16488  16489   2023-05-30   2023-05-30                      md-2069         md-2069         md-2069 2023-05-30       0

    [16489 rows x 10 columns]

    Laboratory codes table:
          id date_created date_updated                    code                    name description  is_visible
    0      1   2023-05-30   2023-05-30            hypertension            hypertension                       1
    1      2   2023-05-30   2023-05-30                 gradeiv                 gradeiv                       1
    2      3   2023-05-30   2023-05-30            perivascular            perivascular                       1
    3      4   2023-05-30   2023-05-30                 cerebro                 cerebro                       1
    4      5   2023-05-30   2023-05-30               contissue               contissue                       1
    ..   ...          ...          ...                     ...                     ...         ...         ...
    328  329   2023-05-30   2023-05-30             rales_right             rales_right                       1
    329  330   2023-05-30   2023-05-30                 painful                 painful                       1
    330  331   2023-05-30   2023-05-30  parental_fluid_volumne  parental_fluid_volumne                       1
    331  332   2023-05-30   2023-05-30   skin_rash_description   skin_rash_description                       1
    332  333   2023-05-30   2023-05-30      medication_regular      medication_regular                       1

    [333 rows x 7 columns]

    Laboratory tests table:
                  id     uuid        date_created        date_updated      date_collected        date_outcome  result unit unit_range result_status abnormal_status  code_id  patient_id
    0              1        1 2020-06-11 00:00:00 2020-06-11 00:00:00 2020-06-11 00:00:00 2020-06-11 00:00:00     1.0  NaN                  UNKNOWN                        1           1
    1              2        2 2020-06-17 00:00:00 2020-06-17 00:00:00 2020-06-17 00:00:00 2020-06-17 00:00:00     0.0  NaN                  UNKNOWN                        1           2
    2              3        3 2020-06-18 00:00:00 2020-06-18 00:00:00 2020-06-18 00:00:00 2020-06-18 00:00:00     0.0  NaN                  UNKNOWN                        1           3
    3              4        4 2020-06-22 00:00:00 2020-06-22 00:00:00 2020-06-22 00:00:00 2020-06-22 00:00:00     0.0  NaN                  UNKNOWN                        1           4
    4              5        5 2020-07-02 00:00:00 2020-07-02 00:00:00 2020-07-02 00:00:00 2020-07-02 00:00:00     0.0  NaN                  UNKNOWN                        1           5
    ...          ...      ...                 ...                 ...                 ...                 ...     ...  ...        ...           ...             ...      ...         ...
    1675547  1675548  1675548 2003-08-30 08:00:00 2003-08-30 08:00:00 2003-08-30 08:00:00 2003-08-30 08:00:00    39.0  NaN                  UNKNOWN                       31       16484
    1675548  1675549  1675549 2003-07-28 09:30:00 2003-07-28 09:30:00 2003-07-28 09:30:00 2003-07-28 09:30:00     5.0  NaN                  UNKNOWN                       31       16485
    1675549  1675550  1675550 2003-08-02 09:30:00 2003-08-02 09:30:00 2003-08-02 09:30:00 2003-08-02 09:30:00    10.0  NaN                  UNKNOWN                       31       16485
    1675550  1675551  1675551 2003-07-27 09:30:00 2003-07-27 09:30:00 2003-07-27 09:30:00 2003-07-27 09:30:00     4.0  NaN                  UNKNOWN                       31       16486
    1675551  1675552  1675552 2003-08-01 09:30:00 2003-08-01 09:30:00 2003-08-01 09:30:00 2003-08-01 09:30:00     9.0  NaN                  UNKNOWN                       31       16486

    [1675552 rows x 13 columns]






|

.. code-block:: default
   :lineno-start: 6


    # Libraries
    import pandas as pd

    # -----------------------------
    # Helper methods
    # -----------------------------
    def create_ids(series):
        """This method creates the ids"""
        # Unique patient numbers
        unique = series.unique()
        # Patient mapping
        mapping = dict(zip(unique, range(len(unique))))
        # Result (mysql pk ids from 1)
        aux = series.map(mapping) + 1
        # Return
        return aux

    def keep_by_table(df, tablename, remove_prefix=True):
        """Keep columns starting with table name"""
        # Define tag
        tag = '%s_' % tablename
        # Find columns with tag
        cols = [c for c in df.columns if c.startswith(tag)]
        # Keep only those columns
        aux = df[cols].copy(deep=True)
        aux = aux.drop_duplicates()
        aux = aux.reset_index(drop=True)
        # Remove prefix
        if remove_prefix:
            aux.columns = [c.replace(tag, '') for c in cols]
        # Return
        return aux


    # -----------------------------
    # Load data
    # -----------------------------
    # Load data
    data = pd.read_csv('./data/stacked-oucru/combined_stacked.csv',
        #nrows=1000,
        parse_dates=['date'])

    # Show
    print(data)
    print(data.columns)

    # -----------------------------
    # Format
    # -----------------------------
    # Drop
    drop = [
        'Unnamed: 0',
        'Unnamed: 0.1',
        'result_old',
        'date_old',
        'dsource'
    ]

    # Rename
    rename = {
        'study_no': 'patient_nhs_number',
        'date': 'date_collected',
        'column': 'laboratory_code',
    }

    # Replace
    replace = {
        'result': {
            'True': 1,
            'False': 0
        }
    }

    # Basic format
    data = data.drop(columns=drop)
    data = data.rename(columns=rename)

    # Boolean to number
    data = data.replace(replace)

    # Keep only those whose result can be cast to number
    data.result = pd.to_numeric(data.result, errors='coerce')

    # These columns are required
    data = data.dropna(how='any',
        subset=['date_collected', 'result'])

    # Reset index
    data = data.reset_index()

    # Show types
    print(data.dtypes)



    # ---------------------------------
    # Create patients
    # ---------------------------------
    # Create ids
    data['patient_id'] = create_ids(data.patient_nhs_number)

    # Create DataFrame
    patient = keep_by_table(data, tablename='patient')

    # Add dates
    patient['date_created'] = pd.to_datetime('today').normalize()
    patient['date_updated'] = pd.to_datetime('today').normalize()
    patient['name'] = ''
    patient['surname'] = ''
    patient['ext_number'] = patient.nhs_number # can be null or unique
    patient['hos_number'] = patient.nhs_number # can be null or unique
    patient['dob'] = pd.to_datetime('today').normalize()      # can be null
    patient['gender'] = 0

    # Order
    patient = patient[['id',
                       'date_created',
                       'date_updated',
                       'name',
                       'surname',
                       'ext_number',
                       'nhs_number',
                       'hos_number',
                       'dob',
                       'gender']]

    # Show
    print("\nPatient table:")
    print(patient)

    # ---------------------------------
    # Create laboratory code
    # ---------------------------------
    # Create ids
    data['laboratory_id'] = create_ids(data.laboratory_code)

    # Create DataFrame
    laboratory_codes = \
        keep_by_table(data, tablename='laboratory')

    # Add dates
    laboratory_codes['date_created'] = pd.to_datetime('today').normalize()
    laboratory_codes['date_updated'] = pd.to_datetime('today').normalize()
    laboratory_codes['name'] = laboratory_codes.code
    laboratory_codes['description'] = ''
    laboratory_codes['is_visible'] = 1

    # Order
    laboratory_codes = laboratory_codes[['id',
                                         'date_created',
                                         'date_updated',
                                         'code',
                                         'name',
                                         'description',
                                         'is_visible']]

    # Show
    print("\nLaboratory codes table:")
    print(laboratory_codes)

    # ---------------------------------
    # Create laboratory test
    # ---------------------------------
    # Drop columns
    data = data.drop(columns=[
        'patient_nhs_number',
        'laboratory_code'
    ])

    # Rename columns
    data = data.rename(columns={
        'laboratory_id': 'code_id',
    })

    # Add columns
    data['id'] = data.index.values + 1
    data['uuid'] = data.id
    data['date_outcome'] = data.date_collected
    data['date_created'] = data.date_collected
    data['date_updated'] = data.date_collected
    data['unit_range'] = ''
    data['result_status'] = 'UNKNOWN'
    data['abnormal_status'] = ''

    # Order
    data = data[['id',
                 'uuid',
                 'date_created',
                 'date_updated',
                 'date_collected',
                 'date_outcome',
                 'result',
                 'unit',
                 'unit_range',
                 'result_status',
                 'abnormal_status',
                 'code_id',
                 'patient_id']]



    # Show
    print("\nLaboratory tests table:")
    print(data)

    # ---------------------------------
    # Save
    # ---------------------------------
    # Save
    patient.to_csv('./outputs/patient.csv',
        date_format='%Y-%m-%d %H:%M:%S', index=False)
    laboratory_codes.to_csv('./outputs/laboratory_code.csv',
        date_format='%Y-%m-%d %H:%M:%S', index=False)
    data.to_csv('./outputs/laboratory_tests.csv',
        date_format='%Y-%m-%d %H:%M:%S', index=False)




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  0.444 seconds)


.. _sphx_glr_download__examples_pandas_plot_format06_stacked_oucru_v2.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_format06_stacked_oucru_v2.py <plot_format06_stacked_oucru_v2.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_format06_stacked_oucru_v2.ipynb <plot_format06_stacked_oucru_v2.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
