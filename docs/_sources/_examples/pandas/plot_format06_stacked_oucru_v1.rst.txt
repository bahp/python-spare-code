
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\pandas\plot_format06_stacked_oucru_v1.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_pandas_plot_format06_stacked_oucru_v1.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_pandas_plot_format06_stacked_oucru_v1.py:


06. Clean OUCRU v1.0
=====================

.. GENERATED FROM PYTHON SOURCE LINES 6-68




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

             Unnamed: 0  Unnamed: 0.1        study_no                date                   column        result unit result_old  date_old dsource
    0                 0             0  01nva-003-1001 2020-06-11 00:00:00             hypertension          True  NaN        NaN       NaN   01nva
    1                 1             1  01nva-003-1002 2020-06-17 00:00:00             hypertension         False  NaN        NaN       NaN   01nva
    2                 2             2  01nva-003-1003 2020-06-18 00:00:00             hypertension         False  NaN        NaN       NaN   01nva
    3                 3             3  01nva-003-1004 2020-06-22 00:00:00             hypertension         False  NaN        NaN       NaN   01nva
    4                 4             4  01nva-003-1005 2020-07-02 00:00:00             hypertension         False  NaN        NaN       NaN   01nva
    ...             ...           ...             ...                 ...                      ...           ...  ...        ...       ...     ...
    1893743      321392        321392          md-997 2003-08-30 08:00:00  serology_interpretation     Secondary  NaN        NaN       NaN      md
    1893744      321393        321393          md-998 2003-07-28 09:30:00  serology_interpretation     Secondary  NaN        NaN       NaN      md
    1893745      321394        321394          md-998 2003-08-02 09:30:00  serology_interpretation     Secondary  NaN        NaN       NaN      md
    1893746      321395        321395          md-999 2003-07-27 09:30:00  serology_interpretation  Inconclusive  NaN        NaN       NaN      md
    1893747      321396        321396          md-999 2003-08-01 09:30:00  serology_interpretation  Inconclusive  NaN        NaN       NaN      md

    [1893748 rows x 10 columns]
    Index(['Unnamed: 0', 'Unnamed: 0.1', 'study_no', 'date', 'column', 'result',
           'unit', 'result_old', 'date_old', 'dsource'],
          dtype='object')
    code                      object
    date_collected    datetime64[ns]
    date_outcome      datetime64[ns]
    id                         int64
    patient                   object
    result                   float64
    unit                      object
    uuid                       int64
    dtype: object






|

.. code-block:: default
   :lineno-start: 6

    # Libraries
    import pandas as pd

    # -----------------------------
    # Load data
    # -----------------------------
    # Load data
    data = pd.read_csv('./data/stacked-oucru/combined_stacked.csv',
        parse_dates=['date'])

    # Show
    print(data)
    print(data.columns)

    # -----------------------------
    # Format
    # -----------------------------
    # Drop
    drop = [
        'Unnamed: 0',
        'Unnamed: 0.1',
        'result_old',
        'date_old',
        'dsource'
    ]

    # Rename
    rename = {
        'study_no' : 'patient',
        'date': 'date_collected',
        'column': 'code',
    }

    # Replace
    replace = {
        'result': {
            'True': 1,
            'False': 0
        }
    }

    # Format
    data = data.drop(columns=drop)
    data = data.rename(columns=rename)
    data['id'] = data.index.values
    data['uuid'] = data.index.values
    data['date_outcome'] = data.date_collected
    data = data.replace(replace)
    data = data[sorted(data.columns.values)]

    # Keep only those whose result can be cast to number
    data.result = pd.to_numeric(data.result, errors='coerce')

    # Remove nan
    data = data[data.result.notna()]

    # Show types
    print(data.dtypes)

    # Save
    data.head(10000).to_csv('./outputs/combined_stack_head10000.csv')
    data.to_csv('./outputs/combined_stacked.csv')


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  20.602 seconds)


.. _sphx_glr_download__examples_pandas_plot_format06_stacked_oucru_v1.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_format06_stacked_oucru_v1.py <plot_format06_stacked_oucru_v1.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_format06_stacked_oucru_v1.ipynb <plot_format06_stacked_oucru_v1.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
