
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\shap\plot_main05_swarmplot.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_shap_plot_main05_swarmplot.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_shap_plot_main05_swarmplot.py:


Shap - Main 05 - Swarmplot
==========================

.. GENERATED FROM PYTHON SOURCE LINES 5-121

.. code-block:: default
   :lineno-start: 6


    # Libraries
    import shap
    import numpy as np
    import pandas as pd
    import seaborn as sns

    import matplotlib.pyplot as plt
    import matplotlib as mpl
    import matplotlib.colorbar
    import matplotlib.colors
    import matplotlib.cm

    from mpl_toolkits.axes_grid1 import make_axes_locatable

    try:
        __file__
        TERMINAL = True
    except:
        TERMINAL = False


    # ------------------------
    # Methods
    # ------------------------
    def scalar_colormap(values, cmap, vmin, vmax):
        """This method creates a colormap based on values.

        Parameters
        ----------
        values : array-like
        The values to create the corresponding colors

        cmap : str
        The colormap

        vmin, vmax : float
        The minimum and maximum possible values

        Returns
        -------
        scalar colormap
        """
        # Create scalar mappable
        norm = mpl.colors.Normalize(vmin=vmin, vmax=vmax, clip=True)
        mapper = mpl.cm.ScalarMappable(norm=norm, cmap=cmap)
        # Get color map
        colormap = sns.color_palette([mapper.to_rgba(i) for i in values])
        # Return
        return colormap, norm


    def scalar_palette(values, cmap, vmin, vmax):
        """This method creates a colorpalette based on values.

        Parameters
        ----------
        values : array-like
        The values to create the corresponding colors

        cmap : str
        The colormap

        vmin, vmax : float
        The minimum and maximum possible values

        Returns
        -------
        scalar colormap

        """
        # Create a matplotlib colormap from name
        # cmap = sns.light_palette(cmap, reverse=False, as_cmap=True)
        cmap = sns.color_palette(cmap, as_cmap=True)
        # Normalize to the range of possible values from df["c"]
        norm = mpl.colors.Normalize(vmin=vmin, vmax=vmax)
        # Create a color dictionary (value in c : color from colormap)
        colors = {}
        for cval in values:
            colors.update({cval: cmap(norm(cval))})
        # Return
        return colors, norm

    def load_shap_file():
        """Load shap file.

        .. note: The timestep does not indicate time step but matrix
                 index index. Since the matrix index for time steps
                 started in negative t=-T and ended in t=0 the
                 transformation should be taken into account.

        """
        data = pd.read_csv('./data/shap.csv')
        data = data.iloc[:, 1:]
        data = data.rename(columns={'timestep': 'indice'})
        data['timestep'] = data.indice - (data.indice.nunique() - 1)
        return data



    # ------------------------------------------------------
    #                       Main
    # ------------------------------------------------------
    # Configuration
    cmap_name = 'coolwarm' # colormap name
    norm_shap = True

    # Load data
    data = load_shap_file()
    #data = data[data['sample'] < 100]

    # Show
    if TERMINAL:
        print("\nShow:")
        print(data)








.. GENERATED FROM PYTHON SOURCE LINES 122-123

Let's see how data looks like

.. GENERATED FROM PYTHON SOURCE LINES 123-126

.. code-block:: default
   :lineno-start: 123

    data.head(10)







.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>sample</th>
          <th>indice</th>
          <th>features</th>
          <th>feature_values</th>
          <th>shap_values</th>
          <th>timestep</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>0</td>
          <td>0</td>
          <td>Ward Lactate</td>
          <td>0.0</td>
          <td>0.000652</td>
          <td>-6</td>
        </tr>
        <tr>
          <th>1</th>
          <td>0</td>
          <td>0</td>
          <td>Ward Glucose</td>
          <td>0.0</td>
          <td>-0.000596</td>
          <td>-6</td>
        </tr>
        <tr>
          <th>2</th>
          <td>0</td>
          <td>0</td>
          <td>Ward sO2</td>
          <td>0.0</td>
          <td>0.000231</td>
          <td>-6</td>
        </tr>
        <tr>
          <th>3</th>
          <td>0</td>
          <td>0</td>
          <td>White blood cell count, blood</td>
          <td>0.0</td>
          <td>0.000582</td>
          <td>-6</td>
        </tr>
        <tr>
          <th>4</th>
          <td>0</td>
          <td>0</td>
          <td>Platelets</td>
          <td>0.0</td>
          <td>-0.001705</td>
          <td>-6</td>
        </tr>
        <tr>
          <th>5</th>
          <td>0</td>
          <td>0</td>
          <td>Haemoglobin</td>
          <td>0.0</td>
          <td>-0.000918</td>
          <td>-6</td>
        </tr>
        <tr>
          <th>6</th>
          <td>0</td>
          <td>0</td>
          <td>Mean cell volume, blood</td>
          <td>0.0</td>
          <td>-0.000654</td>
          <td>-6</td>
        </tr>
        <tr>
          <th>7</th>
          <td>0</td>
          <td>0</td>
          <td>Haematocrit</td>
          <td>0.0</td>
          <td>-0.000487</td>
          <td>-6</td>
        </tr>
        <tr>
          <th>8</th>
          <td>0</td>
          <td>0</td>
          <td>Mean cell haemoglobin conc, blood</td>
          <td>0.0</td>
          <td>0.000090</td>
          <td>-6</td>
        </tr>
        <tr>
          <th>9</th>
          <td>0</td>
          <td>0</td>
          <td>Mean cell haemoglobin level, blood</td>
          <td>0.0</td>
          <td>-0.000296</td>
          <td>-6</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 127-133

Display using ``sns.swarmplot`

.. warning:: This method seems to be quite slow.

.. note:: y-axis has been 'normalized'


.. GENERATED FROM PYTHON SOURCE LINES 133-185

.. code-block:: default
   :lineno-start: 134


    def add_colorbar(fig, cmap, norm):
        """"""
        divider = make_axes_locatable(plt.gca())
        ax_cb = divider.new_horizontal(size="5%", pad=0.05)
        fig.add_axes(ax_cb)
        cb1 = matplotlib.colorbar.ColorbarBase(ax_cb,
             cmap=cmap, norm=norm, orientation='vertical')


    # Loop
    for i, (name, df) in enumerate(data.groupby('features')):

        # Get colormap
        values = df.feature_values
        cmap, norm = scalar_palette(values=values,
            cmap=cmap_name, vmin=values.min(),
            vmax=values.max())

        # Display
        fig, ax = plt.subplots()
        ax = sns.swarmplot(x='timestep',
                           y='shap_values',
                           hue='feature_values',
                           palette=cmap,
                           data=df,
                           size=2,
                           ax=ax)

        # Format figure
        plt.title(name)
        plt.legend([], [], frameon=False)

        if norm_shap:
            plt.ylim(data.shap_values.min(),
                     data.shap_values.max())

        # Invert x axis (if no negative timesteps)
        #ax.invert_xaxis()

        # Create colormap (fix for old versions of mpl)
        cmap = matplotlib.cm.get_cmap(cmap_name)

        # Add colorbar
        add_colorbar(plt.gcf(), cmap, norm)

        # Show only first N
        if int(i) > 5:
            break

    # Show
    plt.show()



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /_examples/shap/images/sphx_glr_plot_main05_swarmplot_001.png
          :alt: Alanine Transaminase
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/shap/images/sphx_glr_plot_main05_swarmplot_002.png
          :alt: Albumin
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/shap/images/sphx_glr_plot_main05_swarmplot_003.png
          :alt: Alkaline Phosphatase
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/shap/images/sphx_glr_plot_main05_swarmplot_004.png
          :alt: Bilirubin
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/shap/images/sphx_glr_plot_main05_swarmplot_005.png
          :alt: C-Reactive Protein
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/shap/images/sphx_glr_plot_main05_swarmplot_006.png
          :alt: Chloride
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/shap/images/sphx_glr_plot_main05_swarmplot_007.png
          :alt: Creatinine
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    79.7% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    83.6% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    75.9% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    61.6% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    57.9% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    59.0% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    47.4% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    93.5% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    90.8% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    90.3% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    75.7% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    79.2% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    66.4% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    53.8% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    78.3% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    75.7% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    77.7% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    76.9% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    73.0% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    66.7% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    68.9% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    91.8% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    91.3% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    81.6% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    80.0% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    73.3% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    57.2% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    69.0% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    88.8% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    89.6% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    80.1% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    74.2% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    60.4% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    49.7% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    75.5% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    92.8% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    88.0% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    81.5% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    85.9% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    82.1% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    57.9% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    75.7% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    74.9% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    76.8% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    78.1% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    60.2% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    61.3% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    61.4% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.
    44.0% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 9 minutes  23.739 seconds)


.. _sphx_glr_download__examples_shap_plot_main05_swarmplot.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_main05_swarmplot.py <plot_main05_swarmplot.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_main05_swarmplot.ipynb <plot_main05_swarmplot.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
